$num-dishs: 3;
$anim-dur: 750ms;
$anim-delay: calc($anim-dur / $num-dishs);


.jumbotron{
    height: 70px;
    border-radius: 20px;
    box-shadow: $shadow;
    line-height: 1.4;  
    display: flex;
    align-items: center;
}
.jumbotron-working{
    @extend .jumbotron;    
    background: $background-grey-light;    
    &__body{
        display: flex;
        flex-direction: row;
        align-items: center;
    }    
    &__bullete{
        color: color(light);
        background: color(primary);
        border-radius: 50%;
        height: 5px;
        width: 5px;
        padding: 12px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-left: -10px;
    }
    i{
        color:$working-icon;
        font-size: 22px; 
        margin: 0 30px;        
    }
    &.store{
        background: $working-store;
    }
    i.store{        
        color:color(primary);        
    }
    &:hover, :active{
        transform: scale(1.01);
        background: $working-store;
        i.store{        
            color:color(primary);        
        }
    }
}

.jumbotron-menu{
    @extend .jumbotron;
    cursor: pointer;
    opacity: 0;
    animation: jumbotron-display $anim-dur ease-in-out both;
    @for $i from 1 through $num-dishs {
        &--dish#{$i}{
            animation-delay: ($anim-delay * $i)+750;
     
        }
    }    
    overflow: hidden;    
    &__body{
        width: 100%;       
        padding: 15px 10px;
        overflow: hidden;
        transition: all 600ms;        
    }   
    &__title{
        font-weight: 700;
    }
    &__description{            
        &--float-right{
            float: right;
        }       
    }
    &__price{
        display: flex;
        align-items: end;
        height: 100%;
        padding: 10px;
        font-weight: 700;
    }
    i{
        color: color(light);
        font-size: 25px;
        transition: all 600ms;
    };
    &:hover, :active{
        
        & > .selected{            
            transform : scaleX(1);
            width: 100px;
            margin: 0;
            & i {
                transform: rotate(360deg);
            }
        }
        
    }    
}
/**
 * Helper class pour tronquer et ajouter une ellipse à une chaîne
 * de caractères trop longue pour tenir sur une ligne
 * 1. Empêche le retour automatique à la ligne,
 * force l’affichage sur une seule ligne.
 * 2. Ajoute une ellipse à la fin de la ligne si dépassement.
 */
 .ellipsis {
    white-space: nowrap; /* 1 */
    text-overflow: ellipsis; /* 2 */
    overflow: hidden;
  }
/**
 * box contenant l'effet de selection d'un plat
 */    
  .selected{
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: color(tertiary);
    height: 100%;
    width: 0px;
    margin-right: -20px;
    border-radius: 0 20px 20px 0;
    transform-origin: right;
    transform: scaleX(0);
    transition: all 600ms;
}

@keyframes jumbotron-display{
    0% {        
        transform:translateY(999px);        
    }          
    100% {
        opacity: 1;
        transform:translateY(0) ;
    }
    
}